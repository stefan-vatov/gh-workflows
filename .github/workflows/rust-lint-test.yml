name: lint-test-cov

on:
  workflow_call:
    inputs:
      project_dir:
        description: "The directory of the project to lint & test"
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: ${{ inputs.project_dir }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - uses: actions-rs/cargo@v1
        with:
          command: test


  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run clippy
        run: cargo clippy -- -D warnings

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options:  --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
